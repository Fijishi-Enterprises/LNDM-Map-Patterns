% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cclabel.R
\name{cclabel}
\alias{cclabel}
\alias{cclabel}
\alias{cclabel.RasterLayer}
\alias{cclabel}
\alias{cclabel.RasterStack}
\alias{cclabel}
\alias{cclabel.RasterBrick}
\alias{cclabel}
\alias{cclabel.list}
\title{cclabel}
\usage{
cclabel(landscape, what, directions)

\method{cclabel}{RasterLayer}(landscape, what = "all", directions = 8)

\method{cclabel}{RasterStack}(landscape, what = "all", directions = 8)

\method{cclabel}{RasterBrick}(landscape, what = "all", directions = 8)

\method{cclabel}{list}(landscape, what = "all", directions = 8)
}
\arguments{
\item{landscape}{Raster* Layer, Stack, Brick or a list of rasterLayers.}

\item{what}{Either "all" (default) for every class in the raster, or specify
class value. See Details.}

\item{directions}{The number of directions in which cells should be connected: 4 (rook's case) or 8 (queen's case).}
}
\value{
List
}
\description{
Connected components labeling
}
\details{
Searches for connected patches (neighbouring cells of the same class i). The 8-neighbours
rule is used ('queen's case). Returns a list with raster. For each class the connected
patches have the value 1 - n. All cells not belonging to the class are \code{NA}.
The underlying C++ code comes from Thell Fowler \email{thell@tbfowler.name} and we
appreciate his effort for implementing this efficient connected labeling algorithm.
}
\examples{
# check for patches of class 1
cclabeled_raster  <-  cclabel(landscape, 1)

# count patches
length(raster::unique(cclabeled_raster[[1]]))

# check for patches of every class
cclabeled_raster <-  cclabel(landscape)

#label a rasterstack
cclabeled_rasterstack <-  cclabel(landscape_stack)

}
