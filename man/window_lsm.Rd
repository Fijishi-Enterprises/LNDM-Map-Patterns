% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/window_lsm.R
\name{window_lsm}
\alias{window_lsm}
\alias{window_lsm.RasterLayer}
\alias{window_lsm.RasterStack}
\alias{window_lsm.RasterBrick}
\alias{window_lsm.stars}
\alias{window_lsm.list}
\title{window_lsm}
\usage{
window_lsm(landscape, window, what, level, metric, name, type, directions,
  count_boundary, consider_boundary, edge_depth, classes_max,
  neighbourhood, ordered, base)

\method{window_lsm}{RasterLayer}(landscape, window, what = NULL,
  level = NULL, metric = NULL, name = NULL, type = NULL,
  directions = 8, count_boundary = FALSE, consider_boundary = FALSE,
  edge_depth = 1, classes_max = NULL, neighbourhood = 4,
  ordered = TRUE, base = "log2")

\method{window_lsm}{RasterStack}(landscape, window, what = NULL,
  level = NULL, metric = NULL, name = NULL, type = NULL,
  directions = 8, count_boundary = FALSE, consider_boundary = FALSE,
  edge_depth = 1, classes_max = NULL, neighbourhood = 4,
  ordered = TRUE, base = "log2")

\method{window_lsm}{RasterBrick}(landscape, window, what = NULL,
  level = NULL, metric = NULL, name = NULL, type = NULL,
  directions = 8, count_boundary = FALSE, consider_boundary = FALSE,
  edge_depth = 1, classes_max = NULL, neighbourhood = 4,
  ordered = TRUE, base = "log2")

\method{window_lsm}{stars}(landscape, window, what = NULL,
  level = NULL, metric = NULL, name = NULL, type = NULL,
  directions = 8, count_boundary = FALSE, consider_boundary = FALSE,
  edge_depth = 1, classes_max = NULL, neighbourhood = 4,
  ordered = TRUE, base = "log2")

\method{window_lsm}{list}(landscape, window, what = NULL, level = NULL,
  metric = NULL, name = NULL, type = NULL, directions = 8,
  count_boundary = FALSE, consider_boundary = FALSE, edge_depth = 1,
  classes_max = NULL, neighbourhood = 4, ordered = TRUE,
  base = "log2")
}
\arguments{
\item{landscape}{Raster* Layer, Stack, Brick or a list of rasterLayers.}

\item{window}{matrix}

\item{what}{Selected level of metrics: either "patch", "class" or "landscape".
It is also possible to specify functions as a vector of strings, e.g. \code{what = c("lsm_c_ca", "lsm_l_ta")}.}

\item{level}{Level of metrics to calculate (e.g. 'landscape').}

\item{metric}{Abbreviation of metrics to calculate (e.g. 'area').}

\item{name}{Full name of metrics to calculate (e.g. 'core area').}

\item{type}{Metric types to calculate according to FRAGSTATS grouping (e.g. 'aggregation metric').}

\item{directions}{The number of directions in which patches should be
connected: 4 (rook's case) or 8 (queen's case).}

\item{count_boundary}{Include landscape boundary in edge length}

\item{consider_boundary}{Logical if cells that only neighbour the landscape
boundary should be considered as core}

\item{edge_depth}{Distance (in cells) a cell has the be away from the patch
edge to be considered as core cell}

\item{classes_max}{Potential maximum number of present classes}

\item{neighbourhood}{The number of directions in which cell adjacencies are considered as neighbours:
4 (rook's case) or 8 (queen's case). The default is 4.}

\item{ordered}{The type of pairs considered. Either ordered (TRUE) or unordered (FALSE).
The default is TRUE.}

\item{base}{The unit in which entropy is measured. The default is "log2",
which compute entropy in "bits". "log" and "log10" can be also used.}
}
\value{
tibble
}
\description{
Moving window
}
\details{
< ADD TEXT HERE >
}
\examples{
\dontrun{
window <- matrix(1, nrow = 5,ncol = 5)
window_lsm(landscape, window = window, what = c("lsm_l_pr", "lsm_l_joinent"))
window_lsm(landscape_stack, window = window, what = c("lsm_l_pr", "lsm_l_joinent"))
}

}
\seealso{
\code{\link{list_lsm}}
}
